helmTimeout: {{ default 86400 (env "HELM_TIMEOUT") }}

namespaces:
  monitoring: {{ default "monitoring" (env "NAMESPACES_MONITORING") }}
  network: {{ default "network" (env "NAMESPACES_NETWORK") }}
  serverless: {{ default "serverless" (env "NAMESPACES_SERVERLESS") }}
  serverlessFunctions: {{ default "serverless-fn" (env "NAMESPACES_SERVERLESS_FUNCTIONS") }}
  serverlessBuild: {{ default "serverless-bld" (env "NAMESPACES_SERVERLESS_BUILD") }}
  storage: {{ default "storage" (env "NAMESPACES_STORAGE") }}

releases:
  certManager: {{ default "cert-manager" (env "RELEASES_CERT_MANAGER") }}
  cortex: {{ default "cortex" (env "RELEASES_CORTEX") }}
  etcd: {{ default "etcd" (env "RELEASES_ETCD") }}
  harbor: {{ default "harbor" (env "RELEASES_HARBOR") }}
  ingressController: {{ default "nginx-ingress" (env "RELEASES_INGRESS_CONTROLLER") }}
  istio:
    old: {{ default "istio" (env "RELEASES_ISTIO") }}
    init: {{ default "istio-init" (env "RELEASES_ISTIO_INIT") }}
    base: {{ default "istio-base" (env "RELEASES_ISTIO_BASE") }}
    control: {{ default "istio-control" (env "RELEASES_ISTIO_CONTROL") }}
    gateway:
      egress: {{ default "istio-egress" (env "RELEASES_ISTIO_GATEWAY_EGRESS") }}
      ingress: {{ default "istio-ingress" (env "RELEASES_ISTIO_GATEWAY_INGRESS") }}
    policy: {{ default "istio-policy" (env "RELEASES_ISTIO_POLICY") }}
    telemetry:
      grafana: {{ default "istio-grafana" (env "RELEASES_ISTIO_TELEMETRY_GRAFANA") }}
      kiali: {{ default "istio-kiali" (env "RELEASES_ISTIO_TELEMETRY_KIALI") }}
      prometheusOperator: {{ default "istio-prometheus-operator" (env "RELEASES_ISTIO_TELEMETRY_PROMETHEUS_OPERATOR") }}
      tracing: {{ default "istio-tracing" (env "RELEASES_ISTIO_TELEMETRY_TRACING") }}
  jaegerOperator: {{ default "jaeger-operator" (env "RELEASES_JAEGER_OPERATOR") }}
  kubeless: {{ default "kubeless" (env "RELEASES_KUBELESS") }}
  kubePromStack: {{ default "kube-prometheus-stack" (env "RELEASES_KUBE_PROMETHEUS_STACK") }}
  minio: {{ default "minio" (env "RELEASES_MINIO") }}
  openebs: {{ default "openebs" (env "RELEASES_OPENEBS") }}
  patroni: {{ default "patroni" (env "RELEASES_PATRONI") }}
  promscale: {{ default "promscale" (env "RELEASES_PROMSCALE") }}
  prometheusAdapter: {{ default "prometheus-adapter" (env "RELEASES_PROMETHEUS_ADAPTER") }}
  redis: {{ default "redis" (env "RELEASES_REDIS") }}
  sentry: {{ default "sentry" (env "RELEASES_SENTRY") }}
  thanos: {{ default "thanos" (env "RELEASES_THANOS") }}

versions:
  charts:
    etcd: {{ default "4.12.2" (env "CHART_VERSION_ETCD") }}
    grafana: {{ default "5.8.16" (env "CHART_VERSION_GRAFANA") }}
    harbor: {{ default "1.6.2" (env "CHART_VERSION_HARBOR") }}
    jaegerOperator: {{ default "2.18.0" (env "CHART_VERSION_JAEGER_OPERATOR") }}
    minio: {{ default "8.0.0" (env "CHART_VERSION_MINIO") }}
    openfaas: {{ default "7.0.4" (env "CHART_VERSION_OPENFAAS") }}
    prometheus: {{ default "11.16.9" (env "CHART_VERSION_PROMETHEUS") }}
  images:
    certManager: {{ default "1.3.1" (env "VERSIONS_CERT_MANAGER") }}
    cortex: {{ default "1.9.0" (env "VERSIONS_CORTEX") }}
    grafana: {{ default "8.0.1" (env "VERSIONS_GRAFANA") }}
    harbor: {{ default "2.2.2" (env "VERSIONS_HARBOR") }}
    istio: {{ default "1.10.1" (env "VERSIONS_ISTIO") }}
    jaeger: {{ default "1.22.1" (env "VERSIONS_JAEGER") }}
    openebs: {{ default "2.9.0" (env "VERSIONS_OPENEBS") }}
    openebsNdm: {{ default "1.3.0" (env "VERSIONS_OPENEBS_NDM") }}
    prometheusAdapter: {{ default "0.8.4" (env "VERSIONS_PROMETHEUS_ADAPTER") }}
    sentry: {{ default "21.5.1" (env "VERSIONS_SENTRY") }}
    thanos: {{ default "0.21.1" (env "VERSIONS_THANOS") }}

harbor:
  adminPassword: {{ default "Harbor12345" (env "HARBOR_ADMIN_PASSWORD") }}
  coreHostname: {{ default "core.harbor.domain" (env "HARBOR_CORE_HOSTNAME") }}
  httpNodePort: {{ default "30002" (env "HARBOR_HTTP_NODEPORT") }}
  db:
    core:
      name: {{ default "harbor_core" (env "HARBOR_DB_CORE_NAME") }}
      user: {{ default "harbor_core" (env "HARBOR_DB_CORE_USER") }}
      pass: {{ default "harbor_core" (env "HARBOR_DB_CORE_PASS") }}
    notaryServer:
      name: {{ default "harbor_notary_server" (env "HARBOR_DB_NOTARY_SERVER_NAME") }}
      user: {{ default "harbor_notary_server" (env "HARBOR_DB_NOTARY_SERVER_USER") }}
      pass: {{ default "harbor_notary_server" (env "HARBOR_DB_NOTARY_SERVER_PASS") }}
    notarySigner:
      name: {{ default "harbor_notary_signer" (env "HARBOR_DB_NOTARY_SIGNER_NAME") }}
      user: {{ default "harbor_notary_signer" (env "HARBOR_DB_NOTARY_SIGNER_USER") }}
      pass: {{ default "harbor_notary_signer" (env "HARBOR_DB_NOTARY_SIGNER_PASS") }}

kong:
  db:
    user: {{ default "kong" (env "KONG_DB_USER") }}
    pass: {{ default "kong" (env "KONG_DB_PASS") }}
    name: {{ default "kong" (env "KONG_DB_NAME") }}

minio:
  host: minio
  accessKey: {{ default "AKIAIOSFODNN7EXAMPLE" (env "MINIO_ACCESS_KEY") }}
  secretKey: {{ default "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" (env "MINIO_SECRET_KEY") }}
  servicePort: {{ default 9000 (env "MINIO_SVC_PORT") }}
  defaultBucket: {{ default "minio-bucket" (env "MINIO_DEFAULT_BUCKET") }}

# https://github.com/zalando/spilo
# https://github.com/timescale/timescaledb-docker-ha
patroni:
  replicas: 1
  bouncers: 1
  #image: registry.opensource.zalan.do/acid/spilo-10
  #tag: 1.5-p5
  #image: registry.opensource.zalan.do/acid/spilo-11
  #tag: 1.6-p1
  #image: registry.opensource.zalan.do/acid/spilo-12
  #tag: 1.6-p5
  #image: timescale/timescaledb-ha
  #tag: pg12-latest
  #image: registry.opensource.zalan.do/acid/spilo-13
  #tag: 2.0-p7
  #image: timescale/timescaledb
  #tag: latest-pg13
  image: docker.io/zer0def/spilo
  tag: 13-2.0p7-tsl2.2.1-citus

redis:
  password: {{ default "redis" (env "REDIS_PASSWORD") }}
  ports:
    readwrite: {{ default "6379" (env "REDIS_PORT") }}
    readonly: {{ default "6380" (env "REDIS_PORT_READONLY") }}
    sentinel: {{ default "26379" (env "REDIS_PORT_SENTINEL") }}
  replicas:
    redis: {{ int (default "3" (env "REDIS_REPLICAS")) }}
    haproxy: {{ int (default "1" (env "REDIS_HAPROXY_REPLICAS")) }}

sentry:
  admin:
    user: "admin@sentry.local"
    password: "sentry"
  db:
    name: "sentry"
    user: "sentry"
    pass: "sentry"

thanosObjstoreConfig:
  secret: {{ default "thanos-objstore-config" (env "THANOS_OBJSTORE_CONFIG_SECRET") }}
  filename: {{ default "object-store.yaml" (env "THANOS_OBJSTORE_CONFIG_FILENAME") }}
thanosSidecarMTLSSecret: {{ default "thanos-sidecar-mtls" (env "THANOS_SIDECAR_MTLS_SECRET") }}

timescale:
  db:
    user: {{ default "timescale" (env "TIMESCALE_DB_USER") }}
    pass: {{ default "timescale" (env "TIMESCALE_DB_PASS") }}
    name: {{ default "timescale" (env "TIMESCALE_DB_NAME") }}

cortex:
  buckets:
    blocks: cortex-blocks
    notify: cortex-notify
  fallbackConfig:
    configMap: cortex-fallback
    mountPath: /fallback
    subPath: fallback.yaml

enables:
  cortex: {{ not (empty (env "ENABLE_CORTEX")) }}
  monitoring: {{ not (empty (env "ENABLE_MONITORING")) }}
  network: {{ not (empty (env "ENABLE_NETWORK")) }}
  promscale: {{ not (empty (env "ENABLE_PROMSCALE")) }}
  serverless: {{ not (empty (env "ENABLE_SERVERLESS")) }}
  storage: {{ not (empty (env "ENABLE_STORAGE")) }}
  minio: {{ not (empty (env "ENABLE_MINIO")) }}
  openebs: {{ not (empty (env "ENABLE_OPENEBS")) }}

istioManifestBase: "{{ requiredEnv "MYDIR" }}/charts/istio/manifests"
k8sRuntime: {{ default "k3d" (env "K8S_RUNTIME") }}
kubePromStackChartVersion: "9.4.10"
#openebsOmitLoopDevs: {{ printf ",%s" (default "" (env "OPENEBS_OMIT_LOOPDEVS")) }}
