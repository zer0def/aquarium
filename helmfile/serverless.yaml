bases:
- "{{ requiredEnv "MYDIR" }}/helmfile/envs.yaml"
---
repositories:
- name: kong
  url: https://charts.konghq.com
- name: openfaas  # https://github.com/openfaas/faas-netes/tree/master/chart
  url: "https://openfaas.github.io/faas-netes"
# https://github.com/fnproject/fn ?

releases:
# doc:
# - https://kubeless.io/docs/
- name: {{ .Values.releases.kubeless }}
  namespace: {{ .Values.namespaces.serverless }}
  # should be installing upstream incubator/kubeless chart, but it's shit
  chart: "{{ requiredEnv "MYDIR" }}/charts/zer0def/incubator/kubeless"
  #installed: {{ .Values.enables.serverless }}
  installed: false
  values:
  - nameOverride: {{ .Values.releases.kubeless | quote }}
    rbac:
      create: true
    controller:
      deployment:
        functionController:
          image:
            tag: v1.0.7
        httpTriggerController:
          image:
            tag: v1.0.2
        cronJobTriggerController:
          image:
            tag: v1.0.3
    kafkaTrigger:
      deployment:
        image:
          tag: v1.0.4
    config:
      functionsNamespace: {{ .Values.namespaces.serverlessFunctions }}
    ui:
      enabled: true
      service:
        type: ClusterIP

# doc:
# - https://docs.openfaas.com/
# - https://github.com/openfaas/faas-netes/blob/master/chart/openfaas/README.md
- name: openfaas
  namespace: {{ .Values.namespaces.serverless }}
  chart: openfaas/openfaas
  version: {{ .Values.versions.charts.openfaas }}
  installed: {{ .Values.enables.serverless }}
  #installed: false
{{- if .Values.enables.serverless }}
  hooks:
  - events: ["presync"]
    command: "/bin/sh"
    args:
    - "-xec"
    - |
      kubectl get ns {{ .Values.namespaces.serverlessFunctions }} || kubectl create ns {{ .Values.namespaces.serverlessFunctions }}
      kubectl annotate ns {{ .Values.namespaces.serverlessFunctions }} openfaas="1"
  - events: ["postsync"]
    command: "/bin/sh"
    args:
    - "-xec"
    - |
  {{- if .Values.enables.network }}
      kubectl label ns {{ .Values.namespaces.serverlessFunctions }} istio-injection=enabled
  {{- end }}
  {{- if .Values.enables.serverless }}
      kubectl apply -f- <<EOF
      kind: Profile
      apiVersion: openfaas.com/v1
      metadata:
        name: runc
        namespace: {{ .Values.namespaces.serverlessFunctions }}
      spec:
        runtimeClassName: runc
      ---
      kind: Profile
      apiVersion: openfaas.com/v1
      metadata:
        name: kata-qemu
        namespace: {{ .Values.namespaces.serverlessFunctions }}
      spec:
        runtimeClassName: kata-qemu
      ---
      kind: Profile
      apiVersion: openfaas.com/v1
      metadata:
        name: kata-fc
        namespace: {{ .Values.namespaces.serverlessFunctions }}
      spec:
        runtimeClassName: kata-fc
      ---
      kind: Profile
      apiVersion: openfaas.com/v1
      metadata:
        name: kata-clh
        namespace: {{ .Values.namespaces.serverlessFunctions }}
      spec:
        runtimeClassName: kata-clh
      EOF
  {{- end }}
{{- end }}
  values:
  - functionNamespace: {{ .Values.namespaces.serverlessFunctions }}
    clusterRole: true
    openfaasPRO: false
    generateBasicAuth: true
    prometheus:
      create: false
    alertmanager:
      create: false
{{- if .Values.enables.network }}
    #basic_auth: true
    #exposeServices: false
    #faasnetes:
    #  httpProbe: false
    #gateway:
    #  directFunctions: true
    #httpProbe: false
    #istio:
    #  mtls: true
{{- end }}

# ref: https://github.com/fission/fission/tree/master/charts
- name: fission
  namespace: {{ .Values.namespaces.serverless }}
  #chart: https://github.com/fission/fission/releases/download/1.11.2/fission-all-1.11.2.tgz
  chart: https://github.com/fission/fission/releases/download/1.11.2/fission-core-1.11.2.tgz
  #installed: {{ .Values.enables.serverless }}
  installed: false
  values:
  - functionNamespace: {{ .Values.namespaces.serverlessFunctions }}
    builderNamespace: {{ .Values.namespaces.serverlessBuild }}

- name: kong
  namespace: {{ .Values.namespaces.network }}
  chart: kong/kong
  installed: false
  needs:
  - {{ .Values.namespaces.storage }}/{{ .Values.releases.patroni }}
  values:
  - env:
      database: postgres
      pg_host: {{ .Values.releases.patroni }}.{{ .Values.namespaces.storage }}.svc
      pg_user: {{ .Values.kong.db.user }}
      pg_password: {{ .Values.kong.db.pass }}
      pg_database: {{ .Values.kong.db.name }}
      #pg_ssl: "on"
      #pg_ssl_verify: "on"
    image:
      tag: alpine
    #ingressController:
    #  installCRDs: false
